PIF: 
id : <0, 0>
is : <-1, -1>
integer : <-1, -1>
; : <-1, -1>
id : <0, 0>
is : <-1, -1>
integer : <-1, -1>
; : <-1, -1>
id : <0, 1>
= : <-1, -1>
const : <0, 2>
; : <-1, -1>
id : <1, 0>
is : <-1, -1>
boolean : <-1, -1>
; : <-1, -1>
id : <1, 0>
= : <-1, -1>
const : <8, 0>
; : <-1, -1>
give : <-1, -1>
id : <0, 0>
; : <-1, -1>
check : <-1, -1>
( : <-1, -1>
id : <0, 0>
<= : <-1, -1>
const : <0, 2>
or : <-1, -1>
( : <-1, -1>
id : <0, 0>
> : <-1, -1>
const : <0, 2>
and : <-1, -1>
id : <0, 0>
% : <-1, -1>
const : <0, 2>
== : <-1, -1>
const : <8, 1>
) : <-1, -1>
) : <-1, -1>
id : <1, 0>
= : <-1, -1>
const : <3, 0>
; : <-1, -1>
while : <-1, -1>
( : <-1, -1>
id : <0, 1>
< : <-1, -1>
id : <0, 0>
/ : <-1, -1>
const : <0, 2>
) : <-1, -1>
{ : <-1, -1>
check : <-1, -1>
( : <-1, -1>
id : <0, 0>
% : <-1, -1>
id : <0, 1>
== : <-1, -1>
const : <8, 1>
) : <-1, -1>
id : <1, 0>
= : <-1, -1>
const : <3, 0>
; : <-1, -1>
id : <0, 1>
= : <-1, -1>
id : <0, 1>
+ : <-1, -1>
const : <0, 2>
; : <-1, -1>
} : <-1, -1>
check : <-1, -1>
( : <-1, -1>
id : <1, 0>
== : <-1, -1>
const : <3, 0>
) : <-1, -1>
see : <-1, -1>
const : <4, 0>
; : <-1, -1>
else : <-1, -1>
see : <-1, -1>
const : <8, 2>
; : <-1, -1>

